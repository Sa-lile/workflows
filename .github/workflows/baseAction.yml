name: action-base

on:
  push:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        options:
          - Develop
          - Preproduction
          - production
        description: 'Environment to deploy to'
        required: true
        default: 'production'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set GitHub details
        id: gidetails
        shell: bash
        run: |
          echo "${GITHUB_CONTEXT}"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Get environment selection
        id: envSelection
        shell: bash
        run: |
          echo "Selected environment: ${ENV_INPUT}"
        env:
          ENV_INPUT: ${{ github.event.inputs.environment }}

      - name: Setup Node.js and cache npm
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: 'package-lock.json'

      - name: Install modules
        id: installModules
        shell: bash
        run: |
          npm install

      - name: Build project
        id: buildProject
        shell: bash
        run: |
          make build
      
      - name: add-build-to-sumary
        shell: bash
        run: echo "build : terminÃ© ">> "${GITHUB_STEP_SUMMARY:-/dev/null}"


      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: project-build
          path: dist/

      

  Download:
    name: Download build artifact
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: project-build
          path: downloaded_build/

      - name: "check"
        run: cd dist && ls -l

      - name: varibale-output
        id: var-output
        run: echo "::set-output name-testvar::coucou" 

      - name: variable-two-output
        id: variable-two-output
        run: echo "testvartwo=wurevoir" >> $GITHUB_OUTPUT
      
      - name: step-sontent
        run: echo ${{ step.variable-output }}

      - name: varibale-two-print
        run: echo "${{ steps.variable-two-output.outputs.twotestvar }}"
        
      
