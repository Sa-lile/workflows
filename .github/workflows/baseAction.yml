name: action-base

on:
  push:
  workflow_dispatch:
    inputs:
      environment:
        type: choice
        options:
          - information
          - warning
          - debug
          - Develop
          - Preproduction
          - production
        description: 'Environment to deploy to'
        required: true
        default: 'production'

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Set GitHub details
        id: gidetails
        shell: bash
        run: |
          echo "${GITHUB_CONTEXT}"
        env:
          GITHUB_CONTEXT: ${{ toJson(github) }}

      - name: Get environment selection
        id: envSelection
        shell: bash
        run: |
          echo "Selected environment: ${ENV_INPUT}"
        env:
          ENV_INPUT: ${{ github.event.inputs.environment }}

      - name: Setup Node.js and cache npm
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install modules (skip if no package.json)
        id: installModules
        shell: bash
        run: |
          if [ ! -f package.json ]; then
            echo "No package.json found, skipping npm install"
            exit 0
          fi
          if [ -f package-lock.json ] || [ -f npm-shrinkwrap.json ] || [ -f yarn.lock ]; then
            echo "Lockfile found — using npm ci"
            npm ci --prefer-offline --no-audit --progress=false
          else
            echo "No lockfile found — using npm install (will create package-lock.json)"
            npm install --no-audit --no-fund --prefer-offline --progress=false
          finstall"
          fi

      - name: Build project
        id: buildProject
        shell: bash
        run: |
          set -euxo pipefail
          echo "Working dir: $(pwd)"
          ls -la
          mkdir -p dist
          if [ -f Makefile ]; then
            echo "---- Makefile ----"
            sed -n '1,200p' Makefile || true
            echo "---- Run make build ----"
            make build
          elif [ -f package.json ] && npm run | grep -q "build"; then
            echo "---- Run npm build ----"
            npm run build
          else
            echo "No build step found. Skipping build."
          fi

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: project-build
          path: dist/

  download:
    name: Download build artifact
    runs-on: ubuntu-latest
    needs: build  # doit référencer le nom du job "build"

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: project-build
          path: downloaded_build/
